--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=22 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_k2a
( 
	data[4..0]	:	input;
	eq[21..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[21..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3179w[2..0]	: WIRE;
	w_anode3193w[3..0]	: WIRE;
	w_anode3210w[3..0]	: WIRE;
	w_anode3220w[3..0]	: WIRE;
	w_anode3230w[3..0]	: WIRE;
	w_anode3240w[3..0]	: WIRE;
	w_anode3250w[3..0]	: WIRE;
	w_anode3260w[3..0]	: WIRE;
	w_anode3270w[3..0]	: WIRE;
	w_anode3282w[2..0]	: WIRE;
	w_anode3292w[3..0]	: WIRE;
	w_anode3303w[3..0]	: WIRE;
	w_anode3313w[3..0]	: WIRE;
	w_anode3323w[3..0]	: WIRE;
	w_anode3333w[3..0]	: WIRE;
	w_anode3343w[3..0]	: WIRE;
	w_anode3353w[3..0]	: WIRE;
	w_anode3363w[3..0]	: WIRE;
	w_anode3374w[2..0]	: WIRE;
	w_anode3384w[3..0]	: WIRE;
	w_anode3395w[3..0]	: WIRE;
	w_anode3405w[3..0]	: WIRE;
	w_anode3415w[3..0]	: WIRE;
	w_anode3425w[3..0]	: WIRE;
	w_anode3435w[3..0]	: WIRE;
	w_anode3445w[3..0]	: WIRE;
	w_anode3455w[3..0]	: WIRE;
	w_anode3466w[2..0]	: WIRE;
	w_anode3476w[3..0]	: WIRE;
	w_anode3487w[3..0]	: WIRE;
	w_anode3497w[3..0]	: WIRE;
	w_anode3507w[3..0]	: WIRE;
	w_anode3517w[3..0]	: WIRE;
	w_anode3527w[3..0]	: WIRE;
	w_anode3537w[3..0]	: WIRE;
	w_anode3547w[3..0]	: WIRE;
	w_data3177w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[21..0] = eq_wire[21..0];
	eq_wire[] = ( ( w_anode3547w[3..3], w_anode3537w[3..3], w_anode3527w[3..3], w_anode3517w[3..3], w_anode3507w[3..3], w_anode3497w[3..3], w_anode3487w[3..3], w_anode3476w[3..3]), ( w_anode3455w[3..3], w_anode3445w[3..3], w_anode3435w[3..3], w_anode3425w[3..3], w_anode3415w[3..3], w_anode3405w[3..3], w_anode3395w[3..3], w_anode3384w[3..3]), ( w_anode3363w[3..3], w_anode3353w[3..3], w_anode3343w[3..3], w_anode3333w[3..3], w_anode3323w[3..3], w_anode3313w[3..3], w_anode3303w[3..3], w_anode3292w[3..3]), ( w_anode3270w[3..3], w_anode3260w[3..3], w_anode3250w[3..3], w_anode3240w[3..3], w_anode3230w[3..3], w_anode3220w[3..3], w_anode3210w[3..3], w_anode3193w[3..3]));
	w_anode3179w[] = ( (w_anode3179w[1..1] & (! data_wire[4..4])), (w_anode3179w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3193w[] = ( (w_anode3193w[2..2] & (! w_data3177w[2..2])), (w_anode3193w[1..1] & (! w_data3177w[1..1])), (w_anode3193w[0..0] & (! w_data3177w[0..0])), w_anode3179w[2..2]);
	w_anode3210w[] = ( (w_anode3210w[2..2] & (! w_data3177w[2..2])), (w_anode3210w[1..1] & (! w_data3177w[1..1])), (w_anode3210w[0..0] & w_data3177w[0..0]), w_anode3179w[2..2]);
	w_anode3220w[] = ( (w_anode3220w[2..2] & (! w_data3177w[2..2])), (w_anode3220w[1..1] & w_data3177w[1..1]), (w_anode3220w[0..0] & (! w_data3177w[0..0])), w_anode3179w[2..2]);
	w_anode3230w[] = ( (w_anode3230w[2..2] & (! w_data3177w[2..2])), (w_anode3230w[1..1] & w_data3177w[1..1]), (w_anode3230w[0..0] & w_data3177w[0..0]), w_anode3179w[2..2]);
	w_anode3240w[] = ( (w_anode3240w[2..2] & w_data3177w[2..2]), (w_anode3240w[1..1] & (! w_data3177w[1..1])), (w_anode3240w[0..0] & (! w_data3177w[0..0])), w_anode3179w[2..2]);
	w_anode3250w[] = ( (w_anode3250w[2..2] & w_data3177w[2..2]), (w_anode3250w[1..1] & (! w_data3177w[1..1])), (w_anode3250w[0..0] & w_data3177w[0..0]), w_anode3179w[2..2]);
	w_anode3260w[] = ( (w_anode3260w[2..2] & w_data3177w[2..2]), (w_anode3260w[1..1] & w_data3177w[1..1]), (w_anode3260w[0..0] & (! w_data3177w[0..0])), w_anode3179w[2..2]);
	w_anode3270w[] = ( (w_anode3270w[2..2] & w_data3177w[2..2]), (w_anode3270w[1..1] & w_data3177w[1..1]), (w_anode3270w[0..0] & w_data3177w[0..0]), w_anode3179w[2..2]);
	w_anode3282w[] = ( (w_anode3282w[1..1] & (! data_wire[4..4])), (w_anode3282w[0..0] & data_wire[3..3]), B"1");
	w_anode3292w[] = ( (w_anode3292w[2..2] & (! w_data3177w[2..2])), (w_anode3292w[1..1] & (! w_data3177w[1..1])), (w_anode3292w[0..0] & (! w_data3177w[0..0])), w_anode3282w[2..2]);
	w_anode3303w[] = ( (w_anode3303w[2..2] & (! w_data3177w[2..2])), (w_anode3303w[1..1] & (! w_data3177w[1..1])), (w_anode3303w[0..0] & w_data3177w[0..0]), w_anode3282w[2..2]);
	w_anode3313w[] = ( (w_anode3313w[2..2] & (! w_data3177w[2..2])), (w_anode3313w[1..1] & w_data3177w[1..1]), (w_anode3313w[0..0] & (! w_data3177w[0..0])), w_anode3282w[2..2]);
	w_anode3323w[] = ( (w_anode3323w[2..2] & (! w_data3177w[2..2])), (w_anode3323w[1..1] & w_data3177w[1..1]), (w_anode3323w[0..0] & w_data3177w[0..0]), w_anode3282w[2..2]);
	w_anode3333w[] = ( (w_anode3333w[2..2] & w_data3177w[2..2]), (w_anode3333w[1..1] & (! w_data3177w[1..1])), (w_anode3333w[0..0] & (! w_data3177w[0..0])), w_anode3282w[2..2]);
	w_anode3343w[] = ( (w_anode3343w[2..2] & w_data3177w[2..2]), (w_anode3343w[1..1] & (! w_data3177w[1..1])), (w_anode3343w[0..0] & w_data3177w[0..0]), w_anode3282w[2..2]);
	w_anode3353w[] = ( (w_anode3353w[2..2] & w_data3177w[2..2]), (w_anode3353w[1..1] & w_data3177w[1..1]), (w_anode3353w[0..0] & (! w_data3177w[0..0])), w_anode3282w[2..2]);
	w_anode3363w[] = ( (w_anode3363w[2..2] & w_data3177w[2..2]), (w_anode3363w[1..1] & w_data3177w[1..1]), (w_anode3363w[0..0] & w_data3177w[0..0]), w_anode3282w[2..2]);
	w_anode3374w[] = ( (w_anode3374w[1..1] & data_wire[4..4]), (w_anode3374w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3384w[] = ( (w_anode3384w[2..2] & (! w_data3177w[2..2])), (w_anode3384w[1..1] & (! w_data3177w[1..1])), (w_anode3384w[0..0] & (! w_data3177w[0..0])), w_anode3374w[2..2]);
	w_anode3395w[] = ( (w_anode3395w[2..2] & (! w_data3177w[2..2])), (w_anode3395w[1..1] & (! w_data3177w[1..1])), (w_anode3395w[0..0] & w_data3177w[0..0]), w_anode3374w[2..2]);
	w_anode3405w[] = ( (w_anode3405w[2..2] & (! w_data3177w[2..2])), (w_anode3405w[1..1] & w_data3177w[1..1]), (w_anode3405w[0..0] & (! w_data3177w[0..0])), w_anode3374w[2..2]);
	w_anode3415w[] = ( (w_anode3415w[2..2] & (! w_data3177w[2..2])), (w_anode3415w[1..1] & w_data3177w[1..1]), (w_anode3415w[0..0] & w_data3177w[0..0]), w_anode3374w[2..2]);
	w_anode3425w[] = ( (w_anode3425w[2..2] & w_data3177w[2..2]), (w_anode3425w[1..1] & (! w_data3177w[1..1])), (w_anode3425w[0..0] & (! w_data3177w[0..0])), w_anode3374w[2..2]);
	w_anode3435w[] = ( (w_anode3435w[2..2] & w_data3177w[2..2]), (w_anode3435w[1..1] & (! w_data3177w[1..1])), (w_anode3435w[0..0] & w_data3177w[0..0]), w_anode3374w[2..2]);
	w_anode3445w[] = ( (w_anode3445w[2..2] & w_data3177w[2..2]), (w_anode3445w[1..1] & w_data3177w[1..1]), (w_anode3445w[0..0] & (! w_data3177w[0..0])), w_anode3374w[2..2]);
	w_anode3455w[] = ( (w_anode3455w[2..2] & w_data3177w[2..2]), (w_anode3455w[1..1] & w_data3177w[1..1]), (w_anode3455w[0..0] & w_data3177w[0..0]), w_anode3374w[2..2]);
	w_anode3466w[] = ( (w_anode3466w[1..1] & data_wire[4..4]), (w_anode3466w[0..0] & data_wire[3..3]), B"1");
	w_anode3476w[] = ( (w_anode3476w[2..2] & (! w_data3177w[2..2])), (w_anode3476w[1..1] & (! w_data3177w[1..1])), (w_anode3476w[0..0] & (! w_data3177w[0..0])), w_anode3466w[2..2]);
	w_anode3487w[] = ( (w_anode3487w[2..2] & (! w_data3177w[2..2])), (w_anode3487w[1..1] & (! w_data3177w[1..1])), (w_anode3487w[0..0] & w_data3177w[0..0]), w_anode3466w[2..2]);
	w_anode3497w[] = ( (w_anode3497w[2..2] & (! w_data3177w[2..2])), (w_anode3497w[1..1] & w_data3177w[1..1]), (w_anode3497w[0..0] & (! w_data3177w[0..0])), w_anode3466w[2..2]);
	w_anode3507w[] = ( (w_anode3507w[2..2] & (! w_data3177w[2..2])), (w_anode3507w[1..1] & w_data3177w[1..1]), (w_anode3507w[0..0] & w_data3177w[0..0]), w_anode3466w[2..2]);
	w_anode3517w[] = ( (w_anode3517w[2..2] & w_data3177w[2..2]), (w_anode3517w[1..1] & (! w_data3177w[1..1])), (w_anode3517w[0..0] & (! w_data3177w[0..0])), w_anode3466w[2..2]);
	w_anode3527w[] = ( (w_anode3527w[2..2] & w_data3177w[2..2]), (w_anode3527w[1..1] & (! w_data3177w[1..1])), (w_anode3527w[0..0] & w_data3177w[0..0]), w_anode3466w[2..2]);
	w_anode3537w[] = ( (w_anode3537w[2..2] & w_data3177w[2..2]), (w_anode3537w[1..1] & w_data3177w[1..1]), (w_anode3537w[0..0] & (! w_data3177w[0..0])), w_anode3466w[2..2]);
	w_anode3547w[] = ( (w_anode3547w[2..2] & w_data3177w[2..2]), (w_anode3547w[1..1] & w_data3177w[1..1]), (w_anode3547w[0..0] & w_data3177w[0..0]), w_anode3466w[2..2]);
	w_data3177w[2..0] = data_wire[2..0];
END;
--VALID FILE
