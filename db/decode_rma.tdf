--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=22 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_rma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[21..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[21..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2801w[2..0]	: WIRE;
	w_anode2814w[3..0]	: WIRE;
	w_anode2831w[3..0]	: WIRE;
	w_anode2841w[3..0]	: WIRE;
	w_anode2851w[3..0]	: WIRE;
	w_anode2861w[3..0]	: WIRE;
	w_anode2871w[3..0]	: WIRE;
	w_anode2881w[3..0]	: WIRE;
	w_anode2891w[3..0]	: WIRE;
	w_anode2903w[2..0]	: WIRE;
	w_anode2912w[3..0]	: WIRE;
	w_anode2923w[3..0]	: WIRE;
	w_anode2933w[3..0]	: WIRE;
	w_anode2943w[3..0]	: WIRE;
	w_anode2953w[3..0]	: WIRE;
	w_anode2963w[3..0]	: WIRE;
	w_anode2973w[3..0]	: WIRE;
	w_anode2983w[3..0]	: WIRE;
	w_anode2994w[2..0]	: WIRE;
	w_anode3003w[3..0]	: WIRE;
	w_anode3014w[3..0]	: WIRE;
	w_anode3024w[3..0]	: WIRE;
	w_anode3034w[3..0]	: WIRE;
	w_anode3044w[3..0]	: WIRE;
	w_anode3054w[3..0]	: WIRE;
	w_anode3064w[3..0]	: WIRE;
	w_anode3074w[3..0]	: WIRE;
	w_anode3085w[2..0]	: WIRE;
	w_anode3094w[3..0]	: WIRE;
	w_anode3105w[3..0]	: WIRE;
	w_anode3115w[3..0]	: WIRE;
	w_anode3125w[3..0]	: WIRE;
	w_anode3135w[3..0]	: WIRE;
	w_anode3145w[3..0]	: WIRE;
	w_anode3155w[3..0]	: WIRE;
	w_anode3165w[3..0]	: WIRE;
	w_data2799w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[21..0] = eq_wire[21..0];
	eq_wire[] = ( ( w_anode3165w[3..3], w_anode3155w[3..3], w_anode3145w[3..3], w_anode3135w[3..3], w_anode3125w[3..3], w_anode3115w[3..3], w_anode3105w[3..3], w_anode3094w[3..3]), ( w_anode3074w[3..3], w_anode3064w[3..3], w_anode3054w[3..3], w_anode3044w[3..3], w_anode3034w[3..3], w_anode3024w[3..3], w_anode3014w[3..3], w_anode3003w[3..3]), ( w_anode2983w[3..3], w_anode2973w[3..3], w_anode2963w[3..3], w_anode2953w[3..3], w_anode2943w[3..3], w_anode2933w[3..3], w_anode2923w[3..3], w_anode2912w[3..3]), ( w_anode2891w[3..3], w_anode2881w[3..3], w_anode2871w[3..3], w_anode2861w[3..3], w_anode2851w[3..3], w_anode2841w[3..3], w_anode2831w[3..3], w_anode2814w[3..3]));
	w_anode2801w[] = ( (w_anode2801w[1..1] & (! data_wire[4..4])), (w_anode2801w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2814w[] = ( (w_anode2814w[2..2] & (! w_data2799w[2..2])), (w_anode2814w[1..1] & (! w_data2799w[1..1])), (w_anode2814w[0..0] & (! w_data2799w[0..0])), w_anode2801w[2..2]);
	w_anode2831w[] = ( (w_anode2831w[2..2] & (! w_data2799w[2..2])), (w_anode2831w[1..1] & (! w_data2799w[1..1])), (w_anode2831w[0..0] & w_data2799w[0..0]), w_anode2801w[2..2]);
	w_anode2841w[] = ( (w_anode2841w[2..2] & (! w_data2799w[2..2])), (w_anode2841w[1..1] & w_data2799w[1..1]), (w_anode2841w[0..0] & (! w_data2799w[0..0])), w_anode2801w[2..2]);
	w_anode2851w[] = ( (w_anode2851w[2..2] & (! w_data2799w[2..2])), (w_anode2851w[1..1] & w_data2799w[1..1]), (w_anode2851w[0..0] & w_data2799w[0..0]), w_anode2801w[2..2]);
	w_anode2861w[] = ( (w_anode2861w[2..2] & w_data2799w[2..2]), (w_anode2861w[1..1] & (! w_data2799w[1..1])), (w_anode2861w[0..0] & (! w_data2799w[0..0])), w_anode2801w[2..2]);
	w_anode2871w[] = ( (w_anode2871w[2..2] & w_data2799w[2..2]), (w_anode2871w[1..1] & (! w_data2799w[1..1])), (w_anode2871w[0..0] & w_data2799w[0..0]), w_anode2801w[2..2]);
	w_anode2881w[] = ( (w_anode2881w[2..2] & w_data2799w[2..2]), (w_anode2881w[1..1] & w_data2799w[1..1]), (w_anode2881w[0..0] & (! w_data2799w[0..0])), w_anode2801w[2..2]);
	w_anode2891w[] = ( (w_anode2891w[2..2] & w_data2799w[2..2]), (w_anode2891w[1..1] & w_data2799w[1..1]), (w_anode2891w[0..0] & w_data2799w[0..0]), w_anode2801w[2..2]);
	w_anode2903w[] = ( (w_anode2903w[1..1] & (! data_wire[4..4])), (w_anode2903w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2912w[] = ( (w_anode2912w[2..2] & (! w_data2799w[2..2])), (w_anode2912w[1..1] & (! w_data2799w[1..1])), (w_anode2912w[0..0] & (! w_data2799w[0..0])), w_anode2903w[2..2]);
	w_anode2923w[] = ( (w_anode2923w[2..2] & (! w_data2799w[2..2])), (w_anode2923w[1..1] & (! w_data2799w[1..1])), (w_anode2923w[0..0] & w_data2799w[0..0]), w_anode2903w[2..2]);
	w_anode2933w[] = ( (w_anode2933w[2..2] & (! w_data2799w[2..2])), (w_anode2933w[1..1] & w_data2799w[1..1]), (w_anode2933w[0..0] & (! w_data2799w[0..0])), w_anode2903w[2..2]);
	w_anode2943w[] = ( (w_anode2943w[2..2] & (! w_data2799w[2..2])), (w_anode2943w[1..1] & w_data2799w[1..1]), (w_anode2943w[0..0] & w_data2799w[0..0]), w_anode2903w[2..2]);
	w_anode2953w[] = ( (w_anode2953w[2..2] & w_data2799w[2..2]), (w_anode2953w[1..1] & (! w_data2799w[1..1])), (w_anode2953w[0..0] & (! w_data2799w[0..0])), w_anode2903w[2..2]);
	w_anode2963w[] = ( (w_anode2963w[2..2] & w_data2799w[2..2]), (w_anode2963w[1..1] & (! w_data2799w[1..1])), (w_anode2963w[0..0] & w_data2799w[0..0]), w_anode2903w[2..2]);
	w_anode2973w[] = ( (w_anode2973w[2..2] & w_data2799w[2..2]), (w_anode2973w[1..1] & w_data2799w[1..1]), (w_anode2973w[0..0] & (! w_data2799w[0..0])), w_anode2903w[2..2]);
	w_anode2983w[] = ( (w_anode2983w[2..2] & w_data2799w[2..2]), (w_anode2983w[1..1] & w_data2799w[1..1]), (w_anode2983w[0..0] & w_data2799w[0..0]), w_anode2903w[2..2]);
	w_anode2994w[] = ( (w_anode2994w[1..1] & data_wire[4..4]), (w_anode2994w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3003w[] = ( (w_anode3003w[2..2] & (! w_data2799w[2..2])), (w_anode3003w[1..1] & (! w_data2799w[1..1])), (w_anode3003w[0..0] & (! w_data2799w[0..0])), w_anode2994w[2..2]);
	w_anode3014w[] = ( (w_anode3014w[2..2] & (! w_data2799w[2..2])), (w_anode3014w[1..1] & (! w_data2799w[1..1])), (w_anode3014w[0..0] & w_data2799w[0..0]), w_anode2994w[2..2]);
	w_anode3024w[] = ( (w_anode3024w[2..2] & (! w_data2799w[2..2])), (w_anode3024w[1..1] & w_data2799w[1..1]), (w_anode3024w[0..0] & (! w_data2799w[0..0])), w_anode2994w[2..2]);
	w_anode3034w[] = ( (w_anode3034w[2..2] & (! w_data2799w[2..2])), (w_anode3034w[1..1] & w_data2799w[1..1]), (w_anode3034w[0..0] & w_data2799w[0..0]), w_anode2994w[2..2]);
	w_anode3044w[] = ( (w_anode3044w[2..2] & w_data2799w[2..2]), (w_anode3044w[1..1] & (! w_data2799w[1..1])), (w_anode3044w[0..0] & (! w_data2799w[0..0])), w_anode2994w[2..2]);
	w_anode3054w[] = ( (w_anode3054w[2..2] & w_data2799w[2..2]), (w_anode3054w[1..1] & (! w_data2799w[1..1])), (w_anode3054w[0..0] & w_data2799w[0..0]), w_anode2994w[2..2]);
	w_anode3064w[] = ( (w_anode3064w[2..2] & w_data2799w[2..2]), (w_anode3064w[1..1] & w_data2799w[1..1]), (w_anode3064w[0..0] & (! w_data2799w[0..0])), w_anode2994w[2..2]);
	w_anode3074w[] = ( (w_anode3074w[2..2] & w_data2799w[2..2]), (w_anode3074w[1..1] & w_data2799w[1..1]), (w_anode3074w[0..0] & w_data2799w[0..0]), w_anode2994w[2..2]);
	w_anode3085w[] = ( (w_anode3085w[1..1] & data_wire[4..4]), (w_anode3085w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3094w[] = ( (w_anode3094w[2..2] & (! w_data2799w[2..2])), (w_anode3094w[1..1] & (! w_data2799w[1..1])), (w_anode3094w[0..0] & (! w_data2799w[0..0])), w_anode3085w[2..2]);
	w_anode3105w[] = ( (w_anode3105w[2..2] & (! w_data2799w[2..2])), (w_anode3105w[1..1] & (! w_data2799w[1..1])), (w_anode3105w[0..0] & w_data2799w[0..0]), w_anode3085w[2..2]);
	w_anode3115w[] = ( (w_anode3115w[2..2] & (! w_data2799w[2..2])), (w_anode3115w[1..1] & w_data2799w[1..1]), (w_anode3115w[0..0] & (! w_data2799w[0..0])), w_anode3085w[2..2]);
	w_anode3125w[] = ( (w_anode3125w[2..2] & (! w_data2799w[2..2])), (w_anode3125w[1..1] & w_data2799w[1..1]), (w_anode3125w[0..0] & w_data2799w[0..0]), w_anode3085w[2..2]);
	w_anode3135w[] = ( (w_anode3135w[2..2] & w_data2799w[2..2]), (w_anode3135w[1..1] & (! w_data2799w[1..1])), (w_anode3135w[0..0] & (! w_data2799w[0..0])), w_anode3085w[2..2]);
	w_anode3145w[] = ( (w_anode3145w[2..2] & w_data2799w[2..2]), (w_anode3145w[1..1] & (! w_data2799w[1..1])), (w_anode3145w[0..0] & w_data2799w[0..0]), w_anode3085w[2..2]);
	w_anode3155w[] = ( (w_anode3155w[2..2] & w_data2799w[2..2]), (w_anode3155w[1..1] & w_data2799w[1..1]), (w_anode3155w[0..0] & (! w_data2799w[0..0])), w_anode3085w[2..2]);
	w_anode3165w[] = ( (w_anode3165w[2..2] & w_data2799w[2..2]), (w_anode3165w[1..1] & w_data2799w[1..1]), (w_anode3165w[0..0] & w_data2799w[0..0]), w_anode3085w[2..2]);
	w_data2799w[2..0] = data_wire[2..0];
END;
--VALID FILE
