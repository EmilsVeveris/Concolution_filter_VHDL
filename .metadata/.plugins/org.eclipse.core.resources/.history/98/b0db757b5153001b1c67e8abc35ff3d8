# include <stdio.h>
# include <stdint.h>
# include "altera_avalon_pio_regs.h"
# include "system.h"
# include "sys/alt_stdio.h"
# include "alt_types.h"
# include "altera_avalon_uart.h"
# include <string.h>


int main()
{

	alt_u32 *pBuf;
	alt_u32 lenght = 60000000;
	pBuf = (alt_u32 *)MEM_IF_LPDDR2_EMIF_0_BASE;
	pBuf = malloc(lenght * sizeof(alt_u32));
	if(!pBuf)
	{
		printf("Malloc fail\r\n");
		return 0;
	}

	altera_avalon_uart_state* sp_UART_0;
	sp_UART_0->base = UART_0_BASE;


	uint32_t max[300];

	char tx_buffer[8] = "BITBANG";
	char rx_buffer[8] = "";
	char rx_buffer_old[8];
	int test = 0,count = 0;
	int mem_count = 0;


	IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, 255);


	printf("Hello from Emils Uzd3!\n");
	usleep(100000);
	printf("Hello from Emils Uzd3!\n");
	usleep(100000);
	printf("Hello from Emils Uzd3!\n");
	usleep(100000);
/*while(1){
	while(count < 200)
    {

		test = altera_avalon_uart_read(sp_UART_0, rx_buffer, sizeof(rx_buffer),0);

		pBuf[mem_count] = (int)rx_buffer[0] - 48;
		count = count + 1;
		mem_count = mem_count + 1;

    }
	count = 0;
	while (count < mem_count)
	{

				printf("%d:", count);
				printf("recived data : %d\n", pBuf[count]);
				count = count+1;

	}
	count = 0;
}*/
	int data = 0;
	for(int i = 0;i < 307200;i++)
	{
		if (data< 255){
			data = data +1;
		} else {
			data = 0;
		}

		IOWR_ALTERA_AVALON_PIO_DATA(WRITE_EN_BASE, 1);
		IOWR_ALTERA_AVALON_PIO_DATA(DATA_OUT_BASE, data);
		IOWR_ALTERA_AVALON_PIO_DATA(WRITE_EN_BASE, 0);
	}
	printf("data = %d", data);
  return 0;
}
