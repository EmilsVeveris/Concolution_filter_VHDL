library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
USE ieee.std_logic_unsigned.all;
use work.bus_pkg.all;

entity Adder3 is
generic(WIDTH : integer := 8);
port (
	RESET_N,CLK : IN  std_logic;
	 DIN  : IN bus_array(1 downto 0)(WIDTH-1 downto 0);
    DOUT : OUT std_logic_vector(WIDTH-1 downto 0)
);
end Adder3;
architecture architecture_Adder3 of Adder3 is

signal Data : std_logic_vector((WIDTH-1) downto 0);
--signal Temp_1,Temp_2 : std_logic_vector((WIDTH) downto 0);
begin
/*Temp_1 <= "0"& DIN(0);
Temp_2 <= "0"& DIN(1);*/

process(RESET_N,CLK)
begin
    if RESET_N = '0' then
        Data <= (others => '0');
    else
        if CLK = '1' and CLK'event then
            Data <= DIN(0) + DIN(1);
        else
            Data <= Data;
        end if;
    end if;
end process;

DOUT <= Data;

end architecture_Adder3;
